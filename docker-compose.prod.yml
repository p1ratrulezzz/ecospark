version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://greentech_user:${DB_PASSWORD:-greentech_secure_password_123}@db:5432/greentech_db
      - SESSION_SECRET=${SESSION_SECRET:-change-this-to-a-secure-random-string-in-production}
      - PGHOST=db
      - PGPORT=5432
      - PGDATABASE=greentech_db
      - PGUSER=greentech_user
      - PGPASSWORD=${DB_PASSWORD:-greentech_secure_password_123}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=greentech_db
      - POSTGRES_USER=greentech_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-greentech_secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U greentech_user -d greentech_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Только для разработки - в продакшене не открывайте порт
    # ports:
    #   - "5432:5432"

volumes:
  postgres_data: