services:
  app:
    build: .
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://greentech_user:${DB_PASSWORD:-greentech_secure_password_123}@db:5432/greentech_db
      - SESSION_SECRET=${SESSION_SECRET:-change-this-to-a-secure-random-string-in-production}
      - APP_URL=${APP_URL:-ecospark.loc}
      - PGHOST=db
      - PGPORT=5432
      - PGDATABASE=greentech_db
      - PGUSER=greentech_user
      - PGPASSWORD=${DB_PASSWORD:-greentech_secure_password_123}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - traefik_proxy
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      
      # HTTPS redirect middleware
      - "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.httpsRedirect.redirectscheme.permanent=true"
      
      # HTTP router (redirects to HTTPS)
      - "traefik.http.routers.ecospark-http.rule=Host(`${APP_URL}`)"
      - "traefik.http.routers.ecospark-http.entrypoints=web"
      - "traefik.http.routers.ecospark-http.middlewares=httpsRedirect"
      
      # HTTPS router
      - "traefik.http.routers.ecospark.rule=Host(`${APP_URL}`)"
      - "traefik.http.routers.ecospark.entrypoints=websecure"
      - "traefik.http.routers.ecospark.tls=true"
      - "traefik.http.routers.ecospark.tls.certresolver=le"
      - "traefik.http.services.ecospark.loadbalancer.server.port=5000"
      - "traefik.docker.network=traefik_proxy"

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=greentech_db
      - POSTGRES_USER=greentech_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-greentech_secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U greentech_user -d greentech_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Только для разработки - в продакшене не открывайте порт
    # ports:
    #   - "5432:5432"

volumes:
  postgres_data:

networks:
  traefik_proxy:
    external: true